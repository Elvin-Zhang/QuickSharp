<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConnectionCloneNewName" xml:space="preserve">
    <value>Copy of {0}</value>
  </data>
  <data name="ConnectionDeleteMessage" xml:space="preserve">
    <value>Delete {0}?</value>
  </data>
  <data name="ConnectionDeleteTitle" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="ConnectionInvalidProvider" xml:space="preserve">
    <value>Invalid data provider selected.</value>
  </data>
  <data name="ConnectionTestFailure" xml:space="preserve">
    <value>The connection failed</value>
  </data>
  <data name="ConnectionTestNoString" xml:space="preserve">
    <value>No connection string was provided.</value>
  </data>
  <data name="ConnectionTestSuccess" xml:space="preserve">
    <value>The connection was successful.</value>
  </data>
  <data name="ConnectionTestTitle" xml:space="preserve">
    <value>Test Connection</value>
  </data>
  <data name="ContextMenuClone" xml:space="preserve">
    <value>Clone</value>
  </data>
  <data name="ContextMenuDelete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="ContextMenuEdit" xml:space="preserve">
    <value>Edit...</value>
  </data>
  <data name="ContextMenuNew" xml:space="preserve">
    <value>New...</value>
  </data>
  <data name="DbFileNotFoundMessage" xml:space="preserve">
    <value>Database file not found</value>
  </data>
  <data name="DbFileNotFoundTitle" xml:space="preserve">
    <value>Generate DBML</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="ExtractDbml" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\ExtractDbml.bmp;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="FormButtonCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="FormButtonOK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="FormButtonTest" xml:space="preserve">
    <value>Test Connection</value>
  </data>
  <data name="FormConnectionString" xml:space="preserve">
    <value>&amp;Connection string:</value>
  </data>
  <data name="FormName" xml:space="preserve">
    <value>&amp;Name:</value>
  </data>
  <data name="FormProvider" xml:space="preserve">
    <value>&amp;Provider:</value>
  </data>
  <data name="FormTitle" xml:space="preserve">
    <value>SQL Connection</value>
  </data>
  <data name="ListColumnName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="MainToolsMenuRunQuery" xml:space="preserve">
    <value>Run &amp;SQL Query</value>
  </data>
  <data name="OptionsGroupText" xml:space="preserve">
    <value>SQL Manager</value>
  </data>
  <data name="OptionsPageTextConnections" xml:space="preserve">
    <value>Connections</value>
  </data>
  <data name="OptionsPageTextSqlMetal" xml:space="preserve">
    <value>SqlMetal Utility</value>
  </data>
  <data name="OutputWindowRunQuery" xml:space="preserve">
    <value>Output - Run SQL Query</value>
  </data>
  <data name="OutputWindowRunSqlMetal" xml:space="preserve">
    <value>Output - Extract DBML</value>
  </data>
  <data name="QueryBeginTransaction" xml:space="preserve">
    <value>begin transaction</value>
  </data>
  <data name="QueryCommitTransaction" xml:space="preserve">
    <value>commit transaction</value>
  </data>
  <data name="QueryComplete" xml:space="preserve">
    <value>Query complete</value>
  </data>
  <data name="QueryDataRowName" xml:space="preserve">
    <value>DataTable{0}_Row</value>
  </data>
  <data name="QueryDataSetName" xml:space="preserve">
    <value>DataSet</value>
  </data>
  <data name="QueryErrors" xml:space="preserve">
    <value>{0} command completed with errors: {1}</value>
  </data>
  <data name="QueryNonSelectSuccess" xml:space="preserve">
    <value>{0} command completed successfully: {1} {2} affected</value>
  </data>
  <data name="QueryRollbackTransaction" xml:space="preserve">
    <value>rollback transaction</value>
  </data>
  <data name="QueryRowPlural" xml:space="preserve">
    <value>rows</value>
  </data>
  <data name="QueryRowSingular" xml:space="preserve">
    <value>row</value>
  </data>
  <data name="QuerySelectCommand" xml:space="preserve">
    <value>select</value>
  </data>
  <data name="QuerySelectSuccess" xml:space="preserve">
    <value>{0} command completed successfully: {1} {2} returned</value>
  </data>
  <data name="QueryStarted" xml:space="preserve">
    <value>Query started</value>
  </data>
  <data name="QueryUnknownCommand" xml:space="preserve">
    <value>sql</value>
  </data>
  <data name="RunQuery" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\RunQuery.bmp;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="SqlConnection" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\SqlConnection.bmp;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="SqlMetalComplete" xml:space="preserve">
    <value>DBML extract complete</value>
  </data>
  <data name="SqlMetalConfigTitle" xml:space="preserve">
    <value>Configure SqlMetal</value>
  </data>
  <data name="SqlMetalFormCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="SqlMetalFormFilename" xml:space="preserve">
    <value>&amp;Output filename:</value>
  </data>
  <data name="SqlMetalFormFunctions" xml:space="preserve">
    <value>&amp;Functions</value>
  </data>
  <data name="SqlMetalFormIncludeGroup" xml:space="preserve">
    <value>Include</value>
  </data>
  <data name="SqlMetalFormIntro" xml:space="preserve">
    <value>Generate Database Markup Language file from the database</value>
  </data>
  <data name="SqlMetalFormNoTool" xml:space="preserve">
    <value>SqlMetal tool not found, use the Options editor to set the path.</value>
  </data>
  <data name="SqlMetalFormOk" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="SqlMetalFormSprocs" xml:space="preserve">
    <value>&amp;Stored procedures</value>
  </data>
  <data name="SqlMetalFormTitle" xml:space="preserve">
    <value>Extract DBML File</value>
  </data>
  <data name="SqlMetalFormViews" xml:space="preserve">
    <value>&amp;Views</value>
  </data>
  <data name="SqlMetalOverwriteMessage" xml:space="preserve">
    <value>Overwite existing file: {0}?</value>
  </data>
  <data name="SqlMetalOverwriteTitle" xml:space="preserve">
    <value>Generate DBML</value>
  </data>
  <data name="SqlMetalStarted" xml:space="preserve">
    <value>DBML extract started</value>
  </data>
  <data name="SqlMetalToolPath" xml:space="preserve">
    <value>&amp;Path to SqlMetal utility:</value>
  </data>
  <data name="SqlMetalToolPathWarning" xml:space="preserve">
    <value>Warning: the saved path does not exist.</value>
  </data>
  <data name="StatusBarExtractCompleted" xml:space="preserve">
    <value>DBML extract completed</value>
  </data>
  <data name="StatusBarExtractStarted" xml:space="preserve">
    <value>DBML extract started...</value>
  </data>
  <data name="StatusBarQueryError" xml:space="preserve">
    <value>Query completed with errors</value>
  </data>
  <data name="StatusBarQueryStarted" xml:space="preserve">
    <value>Query started...</value>
  </data>
  <data name="StatusBarQuerySuccess" xml:space="preserve">
    <value>Query completed successfully</value>
  </data>
  <data name="ToolbarActivateConnection" xml:space="preserve">
    <value>Activate Connection</value>
  </data>
  <data name="ToolbarActiveConnection" xml:space="preserve">
    <value>Active Connection</value>
  </data>
  <data name="ToolbarSqlConnection" xml:space="preserve">
    <value>SQLConnection</value>
  </data>
  <data name="ToolbarSqlExtractDbml" xml:space="preserve">
    <value>Extract DBML File</value>
  </data>
  <data name="ToolbarSqlRunQuery" xml:space="preserve">
    <value>Run SQL Query (F5)</value>
  </data>
</root>